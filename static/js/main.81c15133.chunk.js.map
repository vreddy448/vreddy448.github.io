{"version":3,"sources":["store/reducer.js","store/action-creators.js","store/epic.js","store/configureStore.js","components/header/index.js","components/action/index.js","components/display/index.js","components/container/index.js","App.js","serviceWorker.js","index.js"],"names":["rootReducer","combineReducers","app","state","action","type","payload","sampleActionCreator","response","debounceUntilChanged","delay","source","Observable","observer","lastSeen","lastSeenTime","pipe","mergeMap","value","now","Date","console","log","isEqual","empty","of","subscribe","combineEpics","action$","ofType","map","ajax","getJSON","data","catchError","error","reqPayload","id","takeUntil","filter","cancelRequest","cancel","epicMiddleware","createEpicMiddleware","Header","className","src","height","width","alt","React","Component","Action","onClick","window","store","dispatch","Display","this","props","JSON","stringify","connect","ownProps","Container","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","run","rootEpic","configureStore","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.81c15133.chunk.js","sourcesContent":["import { combineReducers } from \"redux\";\n\nexport const appReducer = (state = { }, action) => {\n\n    switch (action.type) {\n        case \"REDUX_ACTION\": {\n            return {...state, ...action.payload}\n        }\n        default:\n            return state\n    }\n}\n\nconst rootReducer = combineReducers({\n    app: appReducer,\n});\n\nexport default rootReducer;","export const sampleActionCreator = (response) => ({\n    type: 'REDUX_ACTION',\n    payload: response\n});","import { combineEpics, ofType } from 'redux-observable';\nimport { of, Observable,empty } from \"rxjs\";\nimport { ajax } from \"rxjs/ajax\";\nimport { isEqual } from \"lodash\";\nimport { map, mergeMap, catchError, takeUntil, filter  } from \"rxjs/operators\";\nimport { sampleActionCreator } from \"./action-creators\";\n\nconst sampleEpic = action$ =>\n  action$.pipe(\n    ofType(\"ACTION\"),\n    map(action => action.payload),\n    debounceUntilChanged(2000),\n    mergeMap(reqPayload => \n        ajax.getJSON(\n          `https://jsonplaceholder.typicode.com/todos/` + reqPayload.id\n        ).pipe(\n          map(response => {\n            return sampleActionCreator({ response, reqPayload })\n          }),\n          takeUntil(action$.pipe(\n            ofType(\"CANCEL_ACTION\"),\n            filter(cancelRequest => {\n              if(cancelRequest.payload.id === reqPayload.id) {\n                return cancelRequest.payload.cancel\n              }\n            })\n          )),\n          catchError(error => console.log(\":: error ocurred at sampleEpic epic :: \", error))\n        )\n    ),\n    catchError(error => console.log(\":: error ocurred at sampleEpic epic :: \", error))\n  );\n\n  const sampleEpic2 = action$ =>\n  action$.pipe(\n    ofType(\"ACTION1\"),\n    map(action => action.payload),\n    mergeMap(payload => \n        ajax.getJSON(\n          `https://jsonplaceholder.typicode.com/todos/1`\n        ).pipe(\n          map(response => {\n            return {response, payload};\n          })\n        )\n    ),\n    mergeMap((data) => {\n        return of(sampleActionCreator(data))\n      }\n    ),\n    catchError(error => console.log(\":: error ocurred at createWork epic :: \", error))\n  );\n\n  export const debounceUntilChanged = (delay) => {\n    return (source) => {\n      return new Observable(observer => {\n  \n        let lastSeen = {};\n        let lastSeenTime = 0;\n  \n        return source\n          .pipe(\n            mergeMap((value) => {\n\n              const now = Date.now();\n              console.log(now, lastSeenTime, now - lastSeenTime);\n              if (isEqual(value, lastSeen) && (now - lastSeenTime) < delay ) {\n                return empty();\n              } else {\n                lastSeen = value;\n                lastSeenTime = now;\n                return of(value);\n              }\n            })\n          )\n          .subscribe(observer);\n      });\n    };\n  }\n\nexport default combineEpics(sampleEpic2, sampleEpic);","import { createStore, applyMiddleware, compose } from 'redux';\nimport { createEpicMiddleware } from \"redux-observable\";\nimport rootReducer from './reducer';\nimport rootEpic from \"./epic\";\n\nconst epicMiddleware = createEpicMiddleware();\n\nexport const configureStore = () => {\n\n  const composeEnhancers =\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n  const store = createStore(\n    rootReducer,\n    composeEnhancers(\n      applyMiddleware(epicMiddleware)\n    )\n  );\n\n  epicMiddleware.run(rootEpic);\n  window.store = store;\n  return store;\n}","import React from 'react';\nimport './index.scss';\n\nexport default class Header extends React.Component {\n\n    render() {\n        return(\n            <nav className=\"navbar shadow bg-white justify-content-center\">\n                <div className=\"navbar-brand\">\n                    <img className=\"d-inline mx-3\" src={\"https://rxjs-dev.firebaseapp.com/generated/images/marketing/home/Rx_Logo-512-512.png\"} height={40} width={40} alt=\"logo\"/>\n                   Debounce and Cancel\n                </div>\n            </nav>\n        )\n    }\n}","import React from 'react';\nimport './index.scss';\n\nexport default class Action extends React.Component {\n\n    render() {\n        return(\n            <div className=\"m-3 card\">\n                <div className=\"card-body\">\n                    <div className=\"row my-3\">\n                        <div className=\"col-md-4\">\n                            <button type=\"button\" className=\"btn btn-primary\" onClick={() => window.store.dispatch({type: 'ACTION', payload: {id: \"1\"}})}>Action 1</button>\n                        </div>\n                        <div className=\"col-md-8\">\n                            <button type=\"button\" className=\"btn btn-secondary\" onClick={() => window.store.dispatch({type: 'CANCEL_ACTION', payload: {id: \"1\", cancel: true}})}>Cancel Action 1</button>\n                        </div>\n                    </div>\n                    <div className=\"row my-3\">\n                        <div className=\"col-md-4\">\n                            <button type=\"button\" className=\"btn btn-primary\" onClick={() => window.store.dispatch({type: 'ACTION', payload: {id: \"2\"}})}>Action 2</button>\n                        </div>\n                        <div className=\"col-md-8\">\n                            <button type=\"button\" className=\"btn btn-secondary\" onClick={() => window.store.dispatch({type: 'CANCEL_ACTION', payload: {id: \"2\", cancel: true}})}>Cancel Action 2</button>\n                        </div>\n                    </div>\n                    <div className=\"row my-3\">\n                        <div className=\"col-md-4\">\n                            <button type=\"button\" className=\"btn btn-primary\" onClick={() => window.store.dispatch({type: 'ACTION', payload: {id: \"3\"}})}>Action 3</button>\n                        </div>\n                        <div className=\"col-md-8\">\n                            <button type=\"button\" className=\"btn btn-secondary\" onClick={() => window.store.dispatch({type: 'CANCEL_ACTION', payload: {id: \"3\", cancel: true}})}>Cancel Action 3</button>\n                        </div>\n                    </div>\n               </div>\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport './index.scss';\n\nclass Display extends React.Component {\n\n    render() {\n        \n        let { reqPayload, response } = this.props;\n\n        return(\n            <div className=\"m-3 card\">\n                <div className=\"card-body\">\n                    <div className=\"mb-3 font-weight-bolder\">\n                        { reqPayload && reqPayload.id }\n                    </div>\n                    <div className=\"font-weight-bolder\">\n                        {JSON.stringify(response)}\n                    </div>\n               </div>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state, ownProps) {\n    return {\n        reqPayload: state.app.reqPayload,\n        response: state.app.response\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        \n    }\n}\n\n// The connect function connects the Redux Dispatch and state to the AppContainer Container Component.\n// Without this the Component wont be functional.\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Display);\n","import React from 'react';\nimport Action from \"../action\";\nimport Display from \"../display\";\nimport './index.scss';\n\nexport default class Container extends React.Component {\n\n    render() {\n        return(\n            <div className=\"m-3\">\n                <div className=\"row\">\n                    <div className=\"col-md-6\">\n                        <Action />\n                    </div>\n                   <div className=\"col-md-6\">\n                        <Display />\n                   </div>\n                </div>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { configureStore } from './store/configureStore';\nimport Header from \"./components/header\";\nimport Container from \"./components/container\";\nimport './App.css';\n\nconst store = configureStore();\n\nconst App = () => {\n  return (\n    <Provider store={store} >\n      <Header />\n      <Container />\n    </Provider>\n) \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}