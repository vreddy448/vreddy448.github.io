{"version":3,"sources":["store/action-creators.js","store/reducer.js","axios-service.js","store/epic.js","store/configureStore.js","components/header/index.js","components/action/index.js","components/action/batch-actions/index.js","components/display/index.js","components/display/batch-actions/index.js","components/container/index.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["sampleActionCreator","response","type","payload","batchDispatch","actions","console","log","batch","i","length","window","store","dispatch","rootReducer","combineReducers","app","state","action","batchData","defaultHeaders","debounceUntilChanged","delay","comparator","source","Observable","observer","lastSeen","lastSeenTime","pipe","mergeMap","value","now","Date","isEqual","empty","of","subscribe","logAndCatchError","msg","catchError","error","errorCreator","cancelRequestUntil","action$","reqPayload","takeUntil","ofType","filter","cancelRequest","signal","cancel","dynamicMap","isParallel","concatMap","combineEpics","map","axios","CancelToken","from","url","config","body","headers","restConfig","data","cancelToken","fetch","id","token","method","x","y","ajax","getJSON","dummyReduxActionCreator","epicMiddleware","createEpicMiddleware","Header","className","src","logo","height","width","alt","React","Component","Action","onClick","BatchAction","batchDataElement","document","getElementById","innerHTML","clearBatchData","Display","this","props","JSON","stringify","connect","ownProps","BatchActionsDisplay","colors","nextProps","nextState","createLabel","prevProps","prevState","snapshot","text","color","flag","element","createElement","style","backgroundColor","maxWidth","appendChild","batchActionsDOM","push","Container","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","run","rootEpic","configureStore","App","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"oNAEaA,EAAsB,SAACC,GAAD,MAAe,CAC9CC,KAAM,eACNC,QAASF,IAgBAG,EAAgB,SAACC,GAC1BC,QAAQC,IAAI,gBAAiBF,GAC7BG,YAAM,WACF,IAAI,IAAIC,EAAE,EAAGA,EAAIJ,EAAQK,OAAQD,IAE7BE,OAAOC,MAAMC,SAASR,EAAQI,OAK1CE,OAAOP,cAAgBA,E,wkBC5BhB,IAmBQU,EAJKC,YAAgB,CAChCC,IAhBsB,WAA0B,IAAzBC,EAAwB,uDAAhB,GAAKC,EAAW,uCAE/C,OAAQA,EAAOhB,MAEX,IAAK,eACD,OAAO,EAAP,GAAWe,EAAX,GAAqBC,EAAOf,SAEhC,IAAK,qBACD,OAAO,EAAP,GAAWc,EAAX,CAAkBE,UAAU,EAAD,GAAMD,EAAOf,WAE5C,QACI,OAAOc,M,isBCVnB,IAAMG,EAAiB,G,4NCKvB,IA6DeC,EAAuB,SAACC,EAAOC,GAC1C,OAAO,SAACC,GACN,OAAO,IAAIC,IAAW,SAAAC,GAEpB,IAAIC,EAAW,GACXC,EAAe,EAEnB,OAAOJ,EACJK,KACCC,YAAS,SAACC,GAER,IAAMC,EAAMC,KAAKD,MAQjB,OANGT,GAGaW,WAGAH,EAAOJ,IAAcK,EAAMJ,EAAgBN,EAClDa,eAEPR,EAAWI,EACXH,EAAeI,EACRI,YAAGL,OAIfM,UAAUX,OAKNY,EAAmB,SAACC,GAAD,OAASC,YAAW,SAAAC,GAElD,OADAnC,QAAQmC,MAAMF,GACPH,YH3FiB,SAACG,EAAKE,GAAN,MAAiB,CACzCvC,KAAM,QACNC,QAAS,CACLoC,MAAKE,UGwFCC,CAAaH,EAAKE,OAIjBE,EAAqB,SAACC,EAASC,EAAYtB,GAAtB,OAChCuB,YACEF,EAAQf,KACNkB,YAAO,iBACPC,YAAO,SAAAC,GACL,GAAG1B,EAAW0B,EAAeJ,GAE3B,OADAA,EAAWK,OAAOC,OAAO,WAClB,OAMXC,EAAa,SAACC,GAClB,OAAGA,EACMvB,IAEAwB,KAIEC,cAhFO,SAAAX,GAAO,OAC3BA,EAAQf,KACNkB,YAAO,WACP1B,EAAqB,KACrBmC,YAAI,SAAAtC,GACF,O,qVAAO,IAAIA,EAAOf,QAAlB,CAA2B+C,ODDtBO,IAAMC,YAAYlC,aCGzBM,YAAS,SAAAe,GAAU,OACfc,YD5Ba,SAACC,EAAKC,GACb,MAAPD,GACCjD,OAAOL,QAAQmC,MAAM,oEAFS,IAI7BqB,EAAwCD,EAAxCC,KAAMZ,EAAkCW,EAAlCX,OAAQa,EAA0BF,EAA1BE,QAAYC,EAJG,YAIWH,EAJX,6BAKlC,OAAOJ,IAAM,KACNO,EADK,CAERJ,MACAK,KAAMH,EACNI,YAAahB,EAGba,QAAQ,KAAK3C,EAAN,GAAyB2C,MCgB3BI,CAAM,8CAAgDtB,EAAWuB,GACpE,CAAElB,OAASL,EAAWK,OAAOmB,MAAQC,OAAS,SAC7CzC,KACD2B,YAAI,SAAAvD,GACF,OAAOD,EAAoB,CAAEC,WAAU4C,iBAEzCF,EAAmBC,EAASC,EAAY,SAAC0B,EAAGC,GAA2B,GAAnBlE,QAAQC,IAAIgE,EAAGC,GAAa,IAAND,EAAS,OAAO,OAGhG/B,YAAW,SAAAC,GAAK,OAAInC,QAAQC,IAAI,0CAA2CkC,OA1D5D,SAAAG,GAAO,OACxBA,EAAQf,KACNkB,YAAO,UACPS,YAAI,SAAAtC,GAAM,OAAIA,EAAOf,UACrBiD,GAAW,EAAXA,CAAiB,SAAAP,GAAU,OACvB4B,IAAKC,QACH,8CAAgD7B,EAAWuB,IAC3DvC,KACA2B,YAAI,SAAAvD,GACF,OAAOD,EAAoB,CAAEC,WAAU4C,iBAEzCC,YAAUF,EAAQf,KAChBkB,YAAO,iBACPC,YAAO,SAAAC,GACL,GAAGA,EAAc9C,QAAQiE,KAAOvB,EAAWuB,GACzC,OAAOnB,EAAc9C,QAAQgD,WAInCb,EAAiB,UAGvBE,YAAW,SAAAC,GAAK,OAAInC,QAAQC,IAAI,0CAA2CkC,OAGrD,SAAAG,GAAO,OAC/BA,EAAQf,KACNkB,YAAO,gBACPS,YAAI,SAAAtC,GAAM,OAAIA,EAAOf,UACrBiD,GAAW,EAAXA,CAAiB,SAAAP,GAAU,OACvB4B,IAAKC,QAAL,gDAEE7C,KACA2B,YAAI,SAAAvD,GACF,OHlC2B,SAACA,GAAD,MAAe,CAClDC,KAAM,qBACNC,QAASF,GGgCM0E,CAAwB1E,QAIvCuC,YAAW,SAAAC,GAAK,OAAInC,QAAQC,IAAI,+CAAgDkC,QCxC9EmC,EAAiBC,c,+DCFFC,E,iLAGb,OACI,yBAAKC,UAAU,iDACX,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,wBAAwBC,IAAKC,IAAMC,OAAQ,GAAIC,MAAO,GAAIC,IAAI,SADjF,c,GALoBC,IAAMC,WCDrBC,G,uLAGb,OACI,yBAAKR,UAAU,YACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,YACX,4BAAQ7E,KAAK,SAAS6E,UAAU,kBAAkBS,QAAS,kBAAM7E,OAAOC,MAAMC,SAAS,CAACX,KAAM,SAAUC,QAAS,CAACiE,GAAI,SAAtH,aAEJ,yBAAKW,UAAU,YACX,4BAAQ7E,KAAK,SAAS6E,UAAU,oBAAoBS,QAAS,kBAAM7E,OAAOC,MAAMC,SAAS,CAACX,KAAM,gBAAiBC,QAAS,CAACiE,GAAI,IAAKjB,QAAQ,OAA5I,qBAGR,yBAAK4B,UAAU,YACX,yBAAKA,UAAU,YACX,4BAAQ7E,KAAK,SAAS6E,UAAU,kBAAkBS,QAAS,kBAAM7E,OAAOC,MAAMC,SAAS,CAACX,KAAM,SAAUC,QAAS,CAACiE,GAAI,SAAtH,aAEJ,yBAAKW,UAAU,YACX,4BAAQ7E,KAAK,SAAS6E,UAAU,oBAAoBS,QAAS,kBAAM7E,OAAOC,MAAMC,SAAS,CAACX,KAAM,gBAAiBC,QAAS,CAACiE,GAAI,IAAKjB,QAAQ,OAA5I,qBAGR,yBAAK4B,UAAU,YACX,yBAAKA,UAAU,YACX,4BAAQ7E,KAAK,SAAS6E,UAAU,kBAAkBS,QAAS,kBAAM7E,OAAOC,MAAMC,SAAS,CAACX,KAAM,SAAUC,QAAS,CAACiE,GAAI,SAAtH,aAEJ,yBAAKW,UAAU,YACX,4BAAQ7E,KAAK,SAAS6E,UAAU,oBAAoBS,QAAS,kBAAM7E,OAAOC,MAAMC,SAAS,CAACX,KAAM,gBAAiBC,QAAS,CAACiE,GAAI,IAAKjB,QAAQ,OAA5I,2B,GA3BQkC,IAAMC,YCOrBG,G,uLAGb,OACI,yBAAKV,UAAU,YACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,aACX,4BAAQ7E,KAAK,SAAS6E,UAAU,kBAAkBS,QAAS,WAEnD7E,OAAOP,cAAc,CAAC,CAACF,KAAM,qBAAsBC,QAAS,QAAS,CAACD,KAAM,qBAAsBC,QAAS,QAAS,CAACD,KAAM,qBAAsBC,QAAS,YAFlK,yCAOR,yBAAK4E,UAAU,YACX,yBAAKA,UAAU,aACX,4BAAQ7E,KAAK,SAAS6E,UAAU,kBAAkBS,QAAS,WACvD7E,OAAOC,MAAMC,SAAS,CAACX,KAAM,iBAC7BS,OAAOC,MAAMC,SAAS,CAACX,KAAM,iBAC7BS,OAAOC,MAAMC,SAAS,CAACX,KAAM,mBAHjC,wCAOR,yBAAK6E,UAAU,YACX,yBAAKA,UAAU,aACX,4BAAQ7E,KAAK,SAAS6E,UAAU,oBAAoBS,QAAS,kBAjC3D,WAC1B,IAAIE,EAAmBC,SAASC,eAAe,aAC5CF,IACCA,EAAiBG,UAAY,IA8B0DC,KAAnE,sB,GA1BaT,IAAMC,YCNzCS,G,uLAEQ,IAAD,EAE0BC,KAAKC,MAA9BpD,EAFD,EAECA,WAAY5C,EAFb,EAEaA,SAGlB,OAFA4C,GAAcvC,QAAQC,IAAIsC,EAAWuB,IAGjC,yBAAKW,UAAU,YACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,2BACTlC,GAAcA,EAAWuB,IAE/B,yBAAKW,UAAU,sBACVmB,KAAKC,UAAUlG,U,GAdlBoF,IAAMC,YAmCbc,mBAbf,SAAyBnF,EAAOoF,GAC5B,MAAO,CACHxD,WAAY5B,EAAMD,IAAI6B,WACtB5C,SAAUgB,EAAMD,IAAIf,WAI5B,SAA4BY,GACxB,MAAO,IAKIuF,CAA6CL,GCnCtDO,I,kBAEF,WAAYL,GAAQ,IAAD,6BACf,4CAAMA,IACNtF,OAAO4F,OAAS,CAAC,UAAW,UAAW,UAAW,UAAW,UAC7D,UAAW,UAAW,UAAW,UAAW,WAH7B,E,mFAUGC,EAAWC,GAE7B,OADAC,GAAY,wBAAyB,IAC9B,I,8CAGaC,EAAWC,GAC/BF,GAAY,0BAA2B,K,yCAGxBC,EAAWC,EAAWC,GACrCH,GAAY,qBAAsB,GAAG,K,+BAKrCA,GAAY,SAAU,GAFjB,IAGCvF,EAAc6E,KAAKC,MAAnB9E,UAIN,OAFAb,QAAQC,IAAIY,GAGR,yBAAK4D,UAAU,eAAeX,GAAG,iB,gDAzBT6B,EAAOhF,GACnCyF,GAAY,2BAA4B,O,GATdrB,IAAMC,YAoDjC,IAAMoB,GAAc,SAACI,EAAMC,EAAOC,GAErC,IAAIC,EAAUtB,SAASuB,cAAc,UACrCD,EAAQpB,UAAYiB,EACpBG,EAAQE,MAAMC,gBAAkBzG,OAAO4F,OAAOQ,GAC9CE,EAAQE,MAAMJ,MAAQ,UACtBE,EAAQE,MAAME,SAAW,cAEtB1B,SAASC,eAAe,cACPD,SAASC,eAAe,aAC9B0B,YAAYL,GAEnBtG,OAAO4G,gBACN5G,OAAO4G,gBAAgBC,KAAKP,GAE5BtG,OAAO4G,gBAAkB,CAACN,IAYvBb,eAvCf,SAAyBnF,EAAOoF,GAC5B,MAAO,CACHlF,UAAWF,EAAMD,IAAIG,YAI7B,SAA4BN,GACxB,MAAO,IAgCIuF,CAA6CE,IC5EvCmB,I,uLAGb,OACI,6BACI,yBAAK1C,UAAU,OACX,2BAAOA,UAAU,uBACb,0BAAMA,UAAU,cAAhB,OACA,8BAAM,yBAAKC,IAAI,uFAAuFI,IAAI,YAAYD,MAAM,KAAKD,OAAO,QACxI,0BAAMH,UAAU,cAAhB,0BAEJ,yBAAKA,UAAU,OACX,yBAAKA,UAAU,YACX,kBAAC,EAAD,OAER,yBAAKA,UAAU,YACP,kBAAC,GAAD,SAIZ,yBAAKA,UAAU,OACX,2BAAOA,UAAU,uBACb,0BAAMA,UAAU,6BAAhB,OACA,0BAAMA,UAAU,oBAAmB,yBAAMC,IAAI,iDAAiDI,IAAI,iBAClG,0BAAML,UAAU,6BAAhB,oBAEJ,yBAAKA,UAAU,OACX,yBAAKA,UAAU,YACX,kBAAC,EAAD,OAER,yBAAKA,UAAU,YACP,kBAAC,GAAD,c,GA/BWM,IAAMC,YCAvC1E,I,OPCwB,WAE5B,IAAM8G,EACJ/G,OAAOgH,sCAAwCC,IAE3ChH,EAAQiH,YACZ/G,EACA4G,EACEI,YAAgBlD,KAOpB,OAHAA,EAAemD,IAAIC,GACnBrH,OAAOC,MAAQA,EACfD,OAAOP,cAAgBA,EAChBQ,EOhBKqH,IAWCC,GATH,WACV,OACE,kBAAC,IAAD,CAAUtH,MAAOA,IACf,kBAAC,EAAD,MACA,kBAAC,GAAD,QCDcuH,QACW,cAA7BxH,OAAOyH,SAASC,UAEe,UAA7B1H,OAAOyH,SAASC,UAEhB1H,OAAOyH,SAASC,SAASC,MACvB,2DCXNC,IAASC,OAAO,kBAAC,GAAD,MAAS7C,SAASC,eAAe,SD0H3C,kBAAmB6C,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,gB,mBEnInBC,EAAOC,QAAU,IAA0B,kC","file":"static/js/main.ab261854.chunk.js","sourcesContent":["import { batch } from 'react-redux';\n\nexport const sampleActionCreator = (response) => ({\n    type: 'REDUX_ACTION',\n    payload: response\n});\n\n\nexport const dummyReduxActionCreator = (response) => ({\n    type: 'DUMMY_REDUX_ACTION',\n    payload: response\n});\n\nexport const errorCreator = (msg, error) => ({\n    type: 'Error',\n    payload: {\n        msg, error\n    }\n});\n\nexport const batchDispatch = (actions) => {\n    console.log(\"batchDispatch\", actions);\n    batch(() => {\n        for(var i=0; i < actions.length; i++) {\n            // eslint-disable-next-line no-undef\n            window.store.dispatch(actions[i])\n        }\n    })\n}\n\nwindow.batchDispatch = batchDispatch;\n","import { combineReducers } from \"redux\";\n\nexport const appReducer = (state = { }, action) => {\n\n    switch (action.type) {\n        \n        case \"REDUX_ACTION\": {\n            return {...state, ...action.payload}\n        }\n        case \"DUMMY_REDUX_ACTION\": {\n            return {...state, batchData: {...action.payload}}\n        }\n        default:\n            return state\n    }\n}\n\nconst rootReducer = combineReducers({\n    app: appReducer,\n});\n\nexport default rootReducer;","import axios from \"axios\";\n\n// below object holds default service broker's headers\nconst defaultHeaders = {};\n\n/**\n * @typedef {Object} Config \n * @property {string} method request method(GET, POST, PUT, PATCH, DELETE) to be used when making the request. Default is 'GET'\n * @property {Object} headers custom headers to be sent\n * @property {Object} body data to be sent as the request body. Only applicable for request methods 'PUT', 'POST', and 'PATCH'\n * @property {number} timeout number of milliseconds before the request times out. Default is '0' (no timeout)\n * @property {boolean} withCredentials indicates whether or not cross-site Access-Control requests. Default is 'false'\n * @property {function} onUploadProgress allows handling of progress events for uploads\n * @property {function} onDownloadProgress llows handling of progress events for downloads\n * @property {Object} signal represents a signal object that allows you to communicate with a fetch request to abort.\n */\n\n/**\n * @description\n * Seeks url and supporting configuration object for the request to be made.\n * If url is null or undefined, logging a console error.\n * Merge headers passed in config object with the default headers that service broker maintain.\n * Call axios with the prepared config object\n * \n * @param {string} url endpoint url\n * @param {Config} config {@link Config} object which supports additional data for network call\n * @returns {*} returns the promise object returned by axios\n * @example fetch('http://www.domain.com/employees', {method: 'GET'})\n */\nexport const fetch = (url, config) => {\n    if(url == null) { /* ≈ to (url === null || url === undefined) */\n        window.console.error('Error: url passed to Service Broker fetch is null (or) undefined');\n    }\n    let {body, signal, headers, ...restConfig} = config;\n    return axios({\n        ...restConfig,\n        url,\n        data: body,\n        cancelToken: signal,\n        /* merging headers from config object with default service broker object.\n        Any duplicates? --> 'config' headers will override the default ones */\n        headers: {...defaultHeaders, ...headers}\n    });\n}\n\n/**\n * @description\n * returns the axios cancelToken source object\n * \n * @returns {*} returns the axios cancelToken source object\n * \n */\nexport const getCancelTokenSource = () => {\n    return axios.CancelToken.source();\n}\n\n/**\n * @description\n * when promise is rejected, this function helps to check if it's because the request was cancelled\n * \n * @param {*} error error object when promise rejects\n * @returns {boolean} returns true/false by calling axios.isCancel for given error object\n */\nexport const isFetchCanceled = (error) => {\n    return axios.isCancel(error);\n}\n","import { combineEpics, ofType } from 'redux-observable';\nimport { of, Observable, empty, from } from \"rxjs\";\nimport { ajax } from \"rxjs/ajax\";\nimport { isEqual } from \"lodash\";\nimport { map, mergeMap, concatMap, catchError, takeUntil, filter } from \"rxjs/operators\";\nimport { sampleActionCreator, errorCreator, dummyReduxActionCreator } from \"./action-creators\";\nimport { fetch, getCancelTokenSource } from \"../axios-service.js\";\n\nconst sampleEpic = action$ =>\n  action$.pipe(\n    ofType(\"ACTION\"),\n    map(action => action.payload),\n    dynamicMap(true)(reqPayload => \n        ajax.getJSON(\n          `https://jsonplaceholder.typicode.com/todos/` + reqPayload.id\n        ).pipe(\n          map(response => {\n            return sampleActionCreator({ response, reqPayload })\n          }),\n          takeUntil(action$.pipe(\n            ofType(\"CANCEL_ACTION\"),\n            filter(cancelRequest => {\n              if(cancelRequest.payload.id === reqPayload.id) {\n                return cancelRequest.payload.cancel\n              }\n            })\n          )),\n          logAndCatchError(\"abc\")\n        )\n    ),\n    catchError(error => console.log(\":: error ocurred at sampleEpic epic :: \", error))\n  );\n\n  const dummyActionEpic = action$ =>\n  action$.pipe(\n    ofType(\"DUMMY_ACTION\"),\n    map(action => action.payload),\n    dynamicMap(true)(reqPayload => \n        ajax.getJSON(\n          `https://jsonplaceholder.typicode.com/todos/1`\n        ).pipe(\n          map(response => {\n            return dummyReduxActionCreator(response)\n          })\n        )\n    ),\n    catchError(error => console.log(\":: error ocurred at dummyActionEpic epic :: \", error))\n  );\n\n  const sampleEpic2 = action$ =>\n  action$.pipe(\n    ofType(\"ACTION1\"),\n    debounceUntilChanged(2000),\n    map(action => {\n      return {...action.payload, signal: getCancelTokenSource()}\n    }),\n    mergeMap(reqPayload => \n        from(fetch(\"https://jsonplaceholder.typicode.com/todos/\" + reqPayload.id, \n          { signal : reqPayload.signal.token,  method : \"GET\", }\n        )).pipe(\n          map(response => {\n            return sampleActionCreator({ response, reqPayload });\n          }),\n          cancelRequestUntil(action$, reqPayload, (x, y) => { console.log(x, y); if(x === 1) return true })\n        )\n    ),\n    catchError(error => console.log(\":: error ocurred at createWork epic :: \", error))\n  );\n\n  export const debounceUntilChanged = (delay, comparator) => {\n    return (source) => {\n      return new Observable(observer => {\n  \n        let lastSeen = {};\n        let lastSeenTime = 0;\n  \n        return source\n          .pipe(\n            mergeMap((value) => {\n\n              const now = Date.now();\n              var _comparator;\n              if(comparator) {\n                _comparator = comparator;\n              } else {\n                _comparator = isEqual;\n              }\n\n              if (_comparator(value, lastSeen) && (now - lastSeenTime) < delay ) {\n                return empty();\n              } else {\n                lastSeen = value;\n                lastSeenTime = now;\n                return of(value);\n              }\n            })\n          )\n          .subscribe(observer);\n      });\n    };\n  }\n\n  export const logAndCatchError = (msg) => catchError(error => {\n    console.error(msg)\n    return of(errorCreator(msg, error));\n  })\n\n  \n  export const cancelRequestUntil = (action$, reqPayload, comparator) => \n    takeUntil(\n      action$.pipe(\n        ofType(\"CANCEL_ACTION\"),\n        filter(cancelRequest => {\n          if(comparator(cancelRequest, reqPayload)) {\n            reqPayload.signal.cancel(\"cancel\");\n            return true\n          }\n        })\n      )\n    )\n   \n  const dynamicMap = (isParallel) => {\n    if(isParallel) {\n      return mergeMap;\n    } else {\n      return concatMap;\n    }\n  }\n\nexport default combineEpics(sampleEpic2, sampleEpic, dummyActionEpic);","import { createStore, applyMiddleware, compose } from 'redux';\nimport { batchDispatch } from './action-creators';\nimport { createEpicMiddleware } from \"redux-observable\";\nimport rootReducer from './reducer';\nimport rootEpic from \"./epic\";\n\nconst epicMiddleware = createEpicMiddleware();\n\nexport const configureStore = () => {\n\n  const composeEnhancers =\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n  const store = createStore(\n    rootReducer,\n    composeEnhancers(\n      applyMiddleware(epicMiddleware)\n    )\n  );\n\n  epicMiddleware.run(rootEpic);\n  window.store = store;\n  window.batchDispatch = batchDispatch;\n  return store;\n}","import React from 'react';\nimport './index.scss';\nimport logo from \"../../logo.svg\";\n\nexport default class Header extends React.Component {\n\n    render() {\n        return(\n            <nav className=\"navbar shadow bg-white justify-content-center\">\n                <div className=\"navbar-brand\">\n                    <img className=\"d-inline align-middle\" src={logo} height={40} width={40} alt=\"logo\"/>\n                   React\n                </div>\n            </nav>\n        )\n    }\n}","import React from 'react';\nimport './index.scss';\n\nexport default class Action extends React.Component {\n\n    render() {\n        return(\n            <div className=\"m-3 card\">\n                <div className=\"card-body\">\n                    <div className=\"row my-3\">\n                        <div className=\"col-md-4\">\n                            <button type=\"button\" className=\"btn btn-primary\" onClick={() => window.store.dispatch({type: 'ACTION', payload: {id: \"1\"}})}>Action 1</button>\n                        </div>\n                        <div className=\"col-md-8\">\n                            <button type=\"button\" className=\"btn btn-secondary\" onClick={() => window.store.dispatch({type: 'CANCEL_ACTION', payload: {id: \"1\", cancel: true}})}>Cancel Action 1</button>\n                        </div>\n                    </div>\n                    <div className=\"row my-3\">\n                        <div className=\"col-md-4\">\n                            <button type=\"button\" className=\"btn btn-primary\" onClick={() => window.store.dispatch({type: 'ACTION', payload: {id: \"2\"}})}>Action 2</button>\n                        </div>\n                        <div className=\"col-md-8\">\n                            <button type=\"button\" className=\"btn btn-secondary\" onClick={() => window.store.dispatch({type: 'CANCEL_ACTION', payload: {id: \"2\", cancel: true}})}>Cancel Action 2</button>\n                        </div>\n                    </div>\n                    <div className=\"row my-3\">\n                        <div className=\"col-md-4\">\n                            <button type=\"button\" className=\"btn btn-primary\" onClick={() => window.store.dispatch({type: 'ACTION', payload: {id: \"3\"}})}>Action 3</button>\n                        </div>\n                        <div className=\"col-md-8\">\n                            <button type=\"button\" className=\"btn btn-secondary\" onClick={() => window.store.dispatch({type: 'CANCEL_ACTION', payload: {id: \"3\", cancel: true}})}>Cancel Action 3</button>\n                        </div>\n                    </div>\n               </div>\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport './index.scss';\n\nexport const clearBatchData = () => {\n    var batchDataElement = document.getElementById(\"batchData\");\n    if(batchDataElement) {\n        batchDataElement.innerHTML = '';\n    }\n}\n\nexport default class BatchAction extends React.Component {\n\n    render() {\n        return(\n            <div className=\"m-3 card\">\n                <div className=\"card-body\">\n                    <div className=\"row my-3\">\n                        <div className=\"col-md-12\">\n                            <button type=\"button\" className=\"btn btn-primary\" onClick={() => \n                                {\n                                    window.batchDispatch([{type: 'DUMMY_REDUX_ACTION', payload: \"data\"}, {type: 'DUMMY_REDUX_ACTION', payload: \"data\"}, {type: 'DUMMY_REDUX_ACTION', payload: \"data\"}])\n                                }\n                            }>Dispatch Multiple Actions via Batch</button>\n                        </div>\n                    </div>\n                    <div className=\"row my-3\">\n                        <div className=\"col-md-12\">\n                            <button type=\"button\" className=\"btn btn-primary\" onClick={() => {\n                                window.store.dispatch({type: 'DUMMY_ACTION'});\n                                window.store.dispatch({type: 'DUMMY_ACTION'});\n                                window.store.dispatch({type: 'DUMMY_ACTION'});\n                            }}>Dispatch Multiple Actions Normally</button>\n                        </div>\n                    </div>\n                    <div className=\"row my-3\">\n                        <div className=\"col-md-12\">\n                            <button type=\"button\" className=\"btn btn-secondary\" onClick={() => clearBatchData()}>Clear Data</button>\n                        </div>\n                    </div>\n               </div>\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport './index.scss';\n\nclass Display extends React.Component {\n\n    render() {\n        \n        let { reqPayload, response } = this.props;\n        reqPayload && console.log(reqPayload.id)\n\n        return(\n            <div className=\"m-3 card\">\n                <div className=\"card-body\">\n                    <div className=\"mb-3 font-weight-bolder\">\n                        { reqPayload && reqPayload.id }\n                    </div>\n                    <div className=\"font-weight-bolder\">\n                        {JSON.stringify(response)}\n                    </div>\n               </div>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state, ownProps) {\n    return {\n        reqPayload: state.app.reqPayload,\n        response: state.app.response\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        \n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Display);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport './index.scss';\n\nclass BatchActionsDisplay extends React.Component {\n\n    constructor(props) {\n        super(props);\n        window.colors = ['#009AD7', '#002856', '#FF540A', '#FEC10D', '#E81159',\n        '#A32200', '#1FB580', '#74378B', '#8ED1EB', '#A5C247'];\n    }\n    \n    static getDerivedStateFromProps(props, state) {\n        createLabel(\"getDerivedStateFromProps\", 1);\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        createLabel(\"shouldComponentUpdate\", 2);\n        return true;\n    } \n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        createLabel(\"getSnapshotBeforeUpdate\", 3);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        createLabel(\"componentDidUpdate\", 4, true);\n    }\n\n    render() {\n        \n        createLabel(\"render\", 5);\n        let { batchData } = this.props;\n\n        console.log(batchData);\n\n        return (\n            <div className=\"m-3 card p-3\" id=\"batchData\">\n                \n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state, ownProps) {\n    return {\n        batchData: state.app.batchData,\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        \n    }\n}\n\nexport const createLabel = (text, color, flag) => {\n    \n    let element = document.createElement(\"label\");\n    element.innerHTML = text;\n    element.style.backgroundColor = window.colors[color];\n    element.style.color = \"#FFFFFF\";\n    element.style.maxWidth = \"max-content\"\n\n    if(document.getElementById(\"batchData\")) {\n        var batchData = document.getElementById(\"batchData\");\n        batchData.appendChild(element);\n    } else {\n        if(window.batchActionsDOM) {\n            window.batchActionsDOM.push(element);\n        } else {\n            window.batchActionsDOM = [element];\n        }\n    }\n\n    if(false) {\n        for(var i=0; i < window.batchActionsDOM.length; i++) {\n            var batchDataElement = document.getElementById(\"batchData\");\n            batchDataElement.appendChild(window.batchActionsDOM[i]);\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BatchActionsDisplay);\n","import React from 'react';\nimport Action from \"../action\";\nimport BatchAction from \"../action/batch-actions\";\nimport Display from \"../display\";\nimport BatchActionsDisplay from \"../display/batch-actions\";\nimport './index.scss';\n\nexport default class Container extends React.Component {\n\n    render() {\n        return(\n            <div>\n                <div className=\"m-3\">\n                    <label className=\"ml-4 section-header\">\n                        <span className=\"rxjs-label\">1. </span>\n                        <span><img src=\"https://rxjs-dev.firebaseapp.com/generated/images/marketing/home/Rx_Logo-512-512.png\" alt=\"rxjs logo\" width=\"25\" height=\"25\" /></span>\n                        <span className=\"rxjs-label\">  Debounce and Cancel</span>\n                    </label>\n                    <div className=\"row\">\n                        <div className=\"col-md-6\">\n                            <Action />\n                        </div>\n                    <div className=\"col-md-6\">\n                            <Display />\n                    </div>\n                    </div>\n                </div>\n                <div className=\"m-3\">\n                    <label className=\"ml-4 section-header\">\n                        <span className=\"react-redux-section-label\">2. </span>\n                        <span className=\"react-redux-logo\"><img  src=\"https://react-redux.js.org/img/redux_white.svg\" alt=\"React Redux\"/></span>\n                        <span className=\"react-redux-section-label\">  Batch Actions</span>\n                    </label>\n                    <div className=\"row\">\n                        <div className=\"col-md-6\">\n                            <BatchAction />\n                        </div>\n                    <div className=\"col-md-6\">\n                            <BatchActionsDisplay />\n                    </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { configureStore } from './store/configureStore';\nimport Header from \"./components/header\";\nimport Container from \"./components/container\";\nimport './App.css';\n\nconst store = configureStore();\n\nconst App = () => {\n  return (\n    <Provider store={store} >\n      <Header />\n      <Container />\n    </Provider>\n) \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}